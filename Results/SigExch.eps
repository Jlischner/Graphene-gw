%!PS-Adobe-2.0 EPSF-2.0
%%Title: SigExch.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Oct 12 09:55:55 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (SigExch.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (jlischner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct 12 09:55:55 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
854 827 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 827 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
0.500 UL
LTb
854 1586 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 1586 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.8)]
] -46.7 MRshow
0.500 UL
LTb
854 2344 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 2344 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MRshow
0.500 UL
LTb
854 3103 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 3103 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MRshow
0.500 UL
LTb
854 3861 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 3861 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
0.500 UL
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 770 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
0.500 UL
LTb
2388 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 2388 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
3922 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 3922 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
5456 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 5456 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.5)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (2)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
0.00 0.00 0.00 C 280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (SigmaExt\(k\)/\(kF/kappa\))]
] -46.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (k/kF)]
] -46.7 MCshow
LTb
3922 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (exchange theory of graphene)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
1.00 0.00 0.00 C 957 2859 M
104 93 V
103 79 V
104 68 V
103 61 V
104 54 V
103 53 V
104 48 V
103 44 V
104 44 V
103 36 V
103 36 V
104 36 V
103 35 V
104 30 V
103 30 V
104 30 V
103 26 V
104 27 V
103 29 V
104 23 V
103 22 V
103 22 V
104 24 V
103 20 V
104 19 V
103 20 V
104 19 V
103 17 V
104 15 V
103 20 V
103 14 V
104 15 V
103 14 V
104 14 V
103 13 V
104 12 V
103 14 V
104 11 V
103 11 V
104 13 V
103 9 V
103 9 V
104 9 V
103 9 V
104 12 V
103 11 V
104 6 V
103 6 V
104 9 V
103 7 V
104 11 V
103 5 V
103 9 V
104 6 V
103 6 V
104 4 V
103 5 V
104 6 V
32 2 V
957 2859 BoxF
1061 2952 BoxF
1164 3031 BoxF
1268 3099 BoxF
1371 3160 BoxF
1475 3214 BoxF
1578 3267 BoxF
1682 3315 BoxF
1785 3359 BoxF
1889 3403 BoxF
1992 3439 BoxF
2095 3475 BoxF
2199 3511 BoxF
2302 3546 BoxF
2406 3576 BoxF
2509 3606 BoxF
2613 3636 BoxF
2716 3662 BoxF
2820 3689 BoxF
2923 3718 BoxF
3027 3741 BoxF
3130 3763 BoxF
3233 3785 BoxF
3337 3809 BoxF
3440 3829 BoxF
3544 3848 BoxF
3647 3868 BoxF
3751 3887 BoxF
3854 3904 BoxF
3958 3919 BoxF
4061 3939 BoxF
4164 3953 BoxF
4268 3968 BoxF
4371 3982 BoxF
4475 3996 BoxF
4578 4009 BoxF
4682 4021 BoxF
4785 4035 BoxF
4889 4046 BoxF
4992 4057 BoxF
5096 4070 BoxF
5199 4079 BoxF
5302 4088 BoxF
5406 4097 BoxF
5509 4106 BoxF
5613 4118 BoxF
5716 4129 BoxF
5820 4135 BoxF
5923 4141 BoxF
6027 4150 BoxF
6130 4157 BoxF
6234 4168 BoxF
6337 4173 BoxF
6440 4182 BoxF
6544 4188 BoxF
6647 4194 BoxF
6751 4198 BoxF
6854 4203 BoxF
6958 4209 BoxF
1.000 UP
0.500 UL
LT1
0.00 0.00 1.00 C 957 2587 M
104 -92 V
103 -76 V
104 -65 V
103 -57 V
104 -50 V
103 -45 V
104 -40 V
103 -37 V
104 -32 V
103 -30 V
103 -27 V
104 -24 V
103 -21 V
104 -19 V
103 -17 V
104 -16 V
103 -13 V
104 -11 V
103 -10 V
104 -8 V
103 -7 V
103 -5 V
104 -4 V
103 -2 V
104 -2 V
103 1 V
104 1 V
103 2 V
104 4 V
103 4 V
103 6 V
104 6 V
103 8 V
104 8 V
103 10 V
104 10 V
103 11 V
104 12 V
103 13 V
104 13 V
103 15 V
103 15 V
104 16 V
103 16 V
104 18 V
103 18 V
104 18 V
103 20 V
104 20 V
103 20 V
104 22 V
103 22 V
103 22 V
104 23 V
103 24 V
104 24 V
103 25 V
104 25 V
32 8 V
957 2587 BoxF
1061 2495 BoxF
1164 2419 BoxF
1268 2354 BoxF
1371 2297 BoxF
1475 2247 BoxF
1578 2202 BoxF
1682 2162 BoxF
1785 2125 BoxF
1889 2093 BoxF
1992 2063 BoxF
2095 2036 BoxF
2199 2012 BoxF
2302 1991 BoxF
2406 1972 BoxF
2509 1955 BoxF
2613 1939 BoxF
2716 1926 BoxF
2820 1915 BoxF
2923 1905 BoxF
3027 1897 BoxF
3130 1890 BoxF
3233 1885 BoxF
3337 1881 BoxF
3440 1879 BoxF
3544 1877 BoxF
3647 1878 BoxF
3751 1879 BoxF
3854 1881 BoxF
3958 1885 BoxF
4061 1889 BoxF
4164 1895 BoxF
4268 1901 BoxF
4371 1909 BoxF
4475 1917 BoxF
4578 1927 BoxF
4682 1937 BoxF
4785 1948 BoxF
4889 1960 BoxF
4992 1973 BoxF
5096 1986 BoxF
5199 2001 BoxF
5302 2016 BoxF
5406 2032 BoxF
5509 2048 BoxF
5613 2066 BoxF
5716 2084 BoxF
5820 2102 BoxF
5923 2122 BoxF
6027 2142 BoxF
6130 2162 BoxF
6234 2184 BoxF
6337 2206 BoxF
6440 2228 BoxF
6544 2251 BoxF
6647 2275 BoxF
6751 2299 BoxF
6854 2324 BoxF
6958 2349 BoxF
1.000 UP
0.500 UL
LT2
0.00 1.00 0.00 C 957 2860 M
104 93 V
103 75 V
104 65 V
103 57 V
104 50 V
103 45 V
104 40 V
103 37 V
104 33 V
103 29 V
103 27 V
104 24 V
103 21 V
104 20 V
103 17 V
104 15 V
103 13 V
104 12 V
103 9 V
104 8 V
103 7 V
103 5 V
104 4 V
103 3 V
104 1 V
103 0 V
104 -1 V
103 -3 V
104 -3 V
103 -5 V
103 -5 V
104 -7 V
103 -7 V
104 -9 V
103 -9 V
104 -11 V
103 -11 V
104 -12 V
103 -13 V
104 -13 V
103 -15 V
103 -15 V
104 -16 V
103 -16 V
104 -17 V
103 -18 V
104 -19 V
103 -20 V
104 -20 V
103 -20 V
104 -21 V
103 -22 V
103 -23 V
104 -23 V
103 -24 V
104 -24 V
103 -25 V
104 -25 V
32 -8 V
957 2860 BoxF
1061 2953 BoxF
1164 3028 BoxF
1268 3093 BoxF
1371 3150 BoxF
1475 3200 BoxF
1578 3245 BoxF
1682 3285 BoxF
1785 3322 BoxF
1889 3355 BoxF
1992 3384 BoxF
2095 3411 BoxF
2199 3435 BoxF
2302 3456 BoxF
2406 3476 BoxF
2509 3493 BoxF
2613 3508 BoxF
2716 3521 BoxF
2820 3533 BoxF
2923 3542 BoxF
3027 3550 BoxF
3130 3557 BoxF
3233 3562 BoxF
3337 3566 BoxF
3440 3569 BoxF
3544 3570 BoxF
3647 3570 BoxF
3751 3569 BoxF
3854 3566 BoxF
3958 3563 BoxF
4061 3558 BoxF
4164 3553 BoxF
4268 3546 BoxF
4371 3539 BoxF
4475 3530 BoxF
4578 3521 BoxF
4682 3510 BoxF
4785 3499 BoxF
4889 3487 BoxF
4992 3474 BoxF
5096 3461 BoxF
5199 3446 BoxF
5302 3431 BoxF
5406 3415 BoxF
5509 3399 BoxF
5613 3382 BoxF
5716 3364 BoxF
5820 3345 BoxF
5923 3325 BoxF
6027 3305 BoxF
6130 3285 BoxF
6234 3264 BoxF
6337 3242 BoxF
6440 3219 BoxF
6544 3196 BoxF
6647 3172 BoxF
6751 3148 BoxF
6854 3123 BoxF
6958 3098 BoxF
1.000 UP
0.500 UL
LT3
0.00 1.00 1.00 C 957 2546 M
104 -90 V
103 -72 V
104 -60 V
103 -52 V
104 -44 V
103 -37 V
104 -32 V
103 -28 V
104 -16 V
103 -19 V
103 -10 V
104 -2 V
103 -3 V
104 1 V
103 7 V
104 13 V
103 12 V
104 22 V
103 31 V
104 31 V
103 40 V
103 43 V
104 51 V
103 57 V
104 71 V
103 73 V
104 99 V
103 117 V
104 226 V
103 144 V
103 102 V
104 71 V
103 72 V
104 66 V
103 54 V
104 38 V
103 53 V
104 38 V
103 30 V
104 47 V
103 37 V
103 19 V
104 23 V
103 26 V
104 33 V
103 29 V
104 10 V
103 13 V
104 18 V
103 20 V
104 30 V
103 14 V
103 21 V
104 10 V
103 10 V
104 9 V
103 9 V
104 13 V
32 6 V
957 2546 BoxF
1061 2456 BoxF
1164 2384 BoxF
1268 2324 BoxF
1371 2272 BoxF
1475 2228 BoxF
1578 2191 BoxF
1682 2159 BoxF
1785 2131 BoxF
1889 2115 BoxF
1992 2096 BoxF
2095 2086 BoxF
2199 2084 BoxF
2302 2081 BoxF
2406 2082 BoxF
2509 2089 BoxF
2613 2102 BoxF
2716 2114 BoxF
2820 2136 BoxF
2923 2167 BoxF
3027 2198 BoxF
3130 2238 BoxF
3233 2281 BoxF
3337 2332 BoxF
3440 2389 BoxF
3544 2460 BoxF
3647 2533 BoxF
3751 2632 BoxF
3854 2749 BoxF
3958 2975 BoxF
4061 3119 BoxF
4164 3221 BoxF
4268 3292 BoxF
4371 3364 BoxF
4475 3430 BoxF
4578 3484 BoxF
4682 3522 BoxF
4785 3575 BoxF
4889 3613 BoxF
4992 3643 BoxF
5096 3690 BoxF
5199 3727 BoxF
5302 3746 BoxF
5406 3769 BoxF
5509 3795 BoxF
5613 3828 BoxF
5716 3857 BoxF
5820 3867 BoxF
5923 3880 BoxF
6027 3898 BoxF
6130 3918 BoxF
6234 3948 BoxF
6337 3962 BoxF
6440 3983 BoxF
6544 3993 BoxF
6647 4003 BoxF
6751 4012 BoxF
6854 4021 BoxF
6958 4034 BoxF
0.500 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
